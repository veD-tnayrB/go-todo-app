{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/check-health": {
            "get": {
                "description": "Its used to know if the server is working correctly",
                "tags": [
                    "Internal"
                ],
                "summary": "Check Health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "description": "Lists all the todos existing in the DB without filters",
                "tags": [
                    "todos"
                ],
                "summary": "Todo List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Success-array_models_Todo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Allows you to create a todo by passing your todo structure",
                "tags": [
                    "todos"
                ],
                "summary": "Create todo",
                "parameters": [
                    {
                        "description": "Todo details",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Empty"
                        }
                    },
                    "400": {
                        "description": "Title is required",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/todos/:id": {
            "get": {
                "description": "Allows you to get one item by its id",
                "tags": [
                    "todos"
                ],
                "summary": "Todo get",
                "parameters": [
                    {
                        "maxLength": 36,
                        "type": "string",
                        "description": "string valid",
                        "name": "string",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Success-models_Todo"
                        }
                    },
                    "400": {
                        "description": "Id is required",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Allows you to update a todo by passing its id and the todo structure",
                "tags": [
                    "todos"
                ],
                "summary": "Updating todo",
                "parameters": [
                    {
                        "description": "Todo details",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Empty"
                        }
                    },
                    "400": {
                        "description": "Id is required",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Todo": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "responses.Empty": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "true",
                    "type": "boolean"
                }
            }
        },
        "responses.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "description": "false",
                    "type": "boolean"
                }
            }
        },
        "responses.Success-array_models_Todo": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Todo"
                    }
                },
                "status": {
                    "description": "true",
                    "type": "boolean"
                }
            }
        },
        "responses.Success-models_Todo": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Todo"
                },
                "status": {
                    "description": "true",
                    "type": "boolean"
                }
            }
        }
    }
}